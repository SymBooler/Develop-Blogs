#include <stdio.h>
#include <string.h>

void solution(char* s, char* result) {
    // 去除前导零
    while (*s == '0' && *(s + 1) != '.' && *(s + 1) != '\0') {
        s++;
    }

    // 分离整数部分和小数部分
    char* decimalPoint = strchr(s, '.');
    int integerLength = decimalPoint ? decimalPoint - s : strlen(s);
    char integerPart[20];
    strncpy(integerPart, s, integerLength);
    integerPart[integerLength] = '\0';

    // 处理整数部分，插入千分位逗号
    int len = strlen(integerPart);
    int commaCount = (len - 1) / 3;
    int resultIndex = 0;
    for (int i = 0; i < len; i++) {
        if (i > 0 && i % 3 == 0) {
            result[resultIndex++] = ',';
        }
        result[resultIndex++] = integerPart[len - 1 - i];
    }
    // 反转结果
    for (int i = 0; i < resultIndex / 2; i++) {
        char temp = result[i];
        result[i] = result[resultIndex - 1 - i];
        result[resultIndex - 1 - i] = temp;
    }

    // 处理小数部分
    if (decimalPoint) {
        result[resultIndex++] = '.';
        strcpy(result + resultIndex, decimalPoint + 1);
    } else {
        result[resultIndex] = '\0';
    }
}

int main() {
    char result1[20];
    solution("1294512.12412", result1);
    printf("%s == '1,294,512.12412'\n", result1);

    char result2[20];
    solution("0000123456789.99", result2);
    printf("%s == '123,456,789.99'\n", result2);

    char result3[20];
    solution("987654321", result3);
    printf("%s == '987,654,321'\n", result3);
}
